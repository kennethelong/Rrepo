---
title: "Exam01"
author: "Kenneth"
format: html
editor: visual
---

# **Data science exam: part 1**

In this first exam exercise you will work with world population data from <https://data.worldbank.org/indicator/SP.POP.TOTL>

You should make a fresh Quarto document and solve the exercises given below. You are allowed to work in groups of at most three people. Please make sure to include all group members as authors of the Quarto file.

Most of the exercises below show a preview of the result that you are supposed to obtain. Of course you should aim at recreating these results, but don’t give up if you don’t get exactly the same. Just explain what you did and argue why you think it is meaningful.

```{r}
## To execute this file the "here" package needs to be installed
## install.packages("here")

## Libraries required to execute this file
library(tidyverse)
library(dplyr)
```

## **Exercise 1**

Read in the data in the file `world_population.csv` and select/deselect and rename columns so you end up with a tibble (`tbl`) named `wpop_full` with 266 rows and 65 columns with names as shown in the output below (the last column being `2022`). *Hint: Use `skip` in `read_csv` to avoid header lines not containing data or names of data.*

```         
# A tibble: 266 × 65    
country  code  `1960` `1961` `1962` `1963` `1964` `1965` `1966` `1967` `1968`    <chr>    <chr>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  1 Aruba    ABW   5.46e4 5.58e4 5.67e4 5.75e4 5.82e4 5.88e4 5.93e4 5.95e4 5.95e4  2 Africa … AFE   1.31e8 1.34e8 1.38e8 1.42e8 1.46e8 1.50e8 1.54e8 1.58e8 1.63e8  3 Afghani… AFG   8.62e6 8.79e6 8.97e6 9.16e6 9.36e6 9.57e6 9.78e6 1.00e7 1.02e7  4 Africa … AFW   9.73e7 9.93e7 1.01e8 1.04e8 1.06e8 1.08e8 1.11e8 1.13e8 1.16e8  5 Angola   AGO   5.36e6 5.44e6 5.52e6 5.60e6 5.67e6 5.74e6 5.79e6 5.83e6 5.87e6  6 Albania  ALB   1.61e6 1.66e6 1.71e6 1.76e6 1.81e6 1.86e6 1.91e6 1.97e6 2.02e6  7 Andorra  AND   9.44e3 1.02e4 1.10e4 1.18e4 1.27e4 1.36e4 1.45e4 1.57e4 1.71e4  8 Arab Wo… ARB   9.34e7 9.58e7 9.83e7 1.01e8 1.04e8 1.06e8 1.09e8 1.12e8 1.16e8  9 United … ARE   1.33e5 1.41e5 1.49e5 1.57e5 1.65e5 1.74e5 1.83e5 1.91e5 2.14e5 10 Argenti… ARG   2.03e7 2.07e7 2.10e7 2.14e7 2.17e7 2.21e7 2.24e7 2.28e7 2.31e7 # ℹ 256 more rows 
# ℹ 54 more variables: `1969` <dbl>, `1970` <dbl>, `1971` <dbl>, `1972` <dbl>, 
#   `1973` <dbl>, `1974` <dbl>, `1975` <dbl>, `1976` <dbl>, `1977` <dbl>, 
#   `1978` <dbl>, `1979` <dbl>, `1980` <dbl>, `1981` <dbl>, `1982` <dbl>, 
#   `1983` <dbl>, `1984` <dbl>, `1985` <dbl>, `1986` <dbl>, `1987` <dbl>, 
#   `1988` <dbl>, `1989` <dbl>, `1990` <dbl>, `1991` <dbl>, `1992` <dbl>, 
#   `1993` <dbl>, `1994` <dbl>, `1995` <dbl>, `1996` <dbl>, `1997` <dbl>, …
```

```{r}
here::here()
filename <- "Data/world_population.csv"

world_population <- read_csv("Data/world_population.csv", col_names = TRUE, col_types = NULL , skip = 3)

View(world_population)

final_world_population <- world_population[, -c(3,4)]
year_columns <- names(final_world_population)[3:length(final_world_population)]
final_world_population <- final_world_population |> 
  mutate(across(all_of(year_columns), as.character))


final_world_population[1, ] <- as.list(as.character(final_world_population[1, ]))

View(final_world_population)


```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
